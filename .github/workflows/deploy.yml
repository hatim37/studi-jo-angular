#name: Deploy Angular to Cloud Run
#
#on:
#  push:
#    branches: [ main ]
#  workflow_dispatch:
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    environment: prod
#
#    steps:
#      - name: RÃ©cupÃ©rer le code
#        uses: actions/checkout@v4
#
#      - name: Installer Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '20'
#
#      - name: Set environment variables for Angular
#        run: |
#          echo "NG_APP_BACKEND_PRODUCTS=${{ secrets.BACKEND_PRODUCTS }}" >> $GITHUB_ENV
#          echo "NG_APP_BACKEND_USER=${{ secrets.BACKEND_USER }}" >> $GITHUB_ENV
#          echo "NG_APP_BACKEND_VALIDATION=${{ secrets.BACKEND_VALIDATION }}" >> $GITHUB_ENV
#          echo "NG_APP_BACKEND_LOGIN=${{ secrets.BACKEND_LOGIN }}" >> $GITHUB_ENV
#          echo "NG_APP_BACKEND_CART=${{ secrets.BACKEND_CART }}" >> $GITHUB_ENV
#          echo "NG_APP_BACKEND_ORDERS=${{ secrets.BACKEND_ORDERS }}" >> $GITHUB_ENV
#          echo "NG_APP_PREPARATION_PROD=production" >> $GITHUB_ENV
#
#      - name: Installer dÃ©pendances
#        run: npm install
#
#      - name: Build Angular
#        run: npm run build --configuration production
#
#      - name: Installer gcloud
#        uses: google-github-actions/setup-gcloud@v2
#        with:
#          project_id: ${{ env.PROJECT_ID }}
#          service_account_key: ${{ secrets.GCP_SA_KEY }}
#          export_default_credentials: true
#
#      - name: Auth Docker pour gcr.io
#        run: gcloud auth configure-docker gcr.io
#
#      - name: Build & Push Docker image
#        run: |
#          docker build -t $IMAGE_REPO:$IMAGE_TAG .
#          docker push $IMAGE_REPO:$IMAGE_TAG
#
#      - name: DÃ©ployer sur Cloud Run
#        run: |
#          gcloud run deploy $SERVICE_NAME \
#            --image $IMAGE_REPO:$IMAGE_TAG \
#            --platform managed \
#            --region $REGION \
#            --allow-unauthenticated \
#            --service-account $SERVICE_ACCOUNT \
#            --port 80 \
#            --timeout=300
#
#      - name: Afficher lâ€™URL du service
#        run: gcloud run services describe $SERVICE_NAME --region $REGION --format='value(status.url)'

name: Deploy Angular Front to Cloud Run

on:
  push:
    branches:
      - main

env:
  SERVICE_NAME: frontend-angular
  REGION: europe-west1
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  BUILD_MODE: cloud   # ðŸ‘ˆ facultatif (par dÃ©faut cloud dans le Dockerfile)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Build Docker image
        run: |
          docker build \
            --build-arg BUILD_MODE=${{ env.BUILD_MODE }} \
            -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

      - name: Push Docker image to GCR
        run: |
          gcloud auth configure-docker gcr.io --quiet
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars BUILD_MODE=${{ env.BUILD_MODE }}


